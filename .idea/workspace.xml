<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8750d852-9b12-4ead-b23b-13c9ba9f5510" name="Changes" comment="Initial Setup &#10;    the use case : &#10;      for a given nested model like the User in the Model.java class in a tree structure&#10;         User -&gt; Home -&gt; Room -&gt; Device -&gt; Data -&gt; DataPoint&#10;      we would like to flatten the structure to a Stream of FlattenDataPoint in FlattenedModel.java that contain the same data &#10;       by implementing Flattener.flatten">
      <change beforePath="$PROJECT_DIR$/src/main/java/org/himnabil/pattern/flattener/example/FlattenedModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/himnabil/pattern/flattener/example/FlattenedModel.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/himnabil/pattern/flattener/example/Model.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/himnabil/pattern/flattener/example/Model.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/himnabil/pattern/flattener/example/FlattenerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/himnabil/pattern/flattener/example/FlattenerTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="27sZcQpngObXW0OaxRxjXl35Sbt" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="org.himnabil.pattern.flattener.example" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="FlattenerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="flattener-pattern-example" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.himnabil.pattern.flattener.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.himnabil.pattern.flattener.example" />
      <option name="MAIN_CLASS_NAME" value="org.himnabil.pattern.flattener.example.FlattenerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.FlattenerTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8750d852-9b12-4ead-b23b-13c9ba9f5510" name="Changes" comment="" />
      <created>1650110836414</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1650110836414</updated>
      <workItem from="1650110838673" duration="10256000" />
    </task>
    <task id="LOCAL-00001" summary="Initial Setup &#10;    the use case : &#10;      for a given nested model like the User in the Model.java class in a tree structure&#10;         User -&gt; Home -&gt; Room -&gt; Device -&gt; Data -&gt; DataPoint&#10;      we would like to flatten the structure to a Stream of FlattenDataPoint in FlattenedModel.java that contain the same data &#10;       by implementing Flattener.flatten">
      <created>1650205186488</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1650205186488</updated>
    </task>
    <task id="LOCAL-00002" summary="Initial Setup &#10;    the use case : &#10;      for a given nested model like the User in the Model.java class in a tree structure&#10;         User -&gt; Home -&gt; Room -&gt; Device -&gt; Data -&gt; DataPoint&#10;      we would like to flatten the structure to a Stream of FlattenDataPoint in FlattenedModel.java that contain the same data &#10;       by implementing Flattener.flatten">
      <created>1650205207998</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1650205207998</updated>
    </task>
    <task id="LOCAL-00003" summary="Initial Setup &#10;    the use case : &#10;      for a given nested model like the User in the Model.java class in a tree structure&#10;         User -&gt; Home -&gt; Room -&gt; Device -&gt; Data -&gt; DataPoint&#10;      we would like to flatten the structure to a Stream of FlattenDataPoint in FlattenedModel.java that contain the same data &#10;       by implementing Flattener.flatten">
      <created>1650205435711</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1650205435711</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial Setup &#10;    the use case : &#10;      for a given nested model like the User in the Model.java class in a tree structure&#10;         User -&gt; Home -&gt; Room -&gt; Device -&gt; Data -&gt; DataPoint&#10;      we would like to flatten the structure to a Stream of FlattenDataPoint in FlattenedModel.java that contain the same data &#10;       by implementing Flattener.flatten" />
    <option name="LAST_COMMIT_MESSAGE" value="Initial Setup &#10;    the use case : &#10;      for a given nested model like the User in the Model.java class in a tree structure&#10;         User -&gt; Home -&gt; Room -&gt; Device -&gt; Data -&gt; DataPoint&#10;      we would like to flatten the structure to a Stream of FlattenDataPoint in FlattenedModel.java that contain the same data &#10;       by implementing Flattener.flatten" />
  </component>
</project>